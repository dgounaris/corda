/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package gradle.dependx

import gradle.dependx.library.DependantsEnhancedFileAuthor
import gradle.dependx.analysis.DependantsEnhancedResolver
import gradle.dependx.consulting.IrrelevantProjectsConsultant
import gradle.dependx.detection.BuildFileDependencyResolver
import gradle.dependx.library.DependxiesFileAuthor
import gradle.dependx.detection.ProjectDiscoverer
import gradle.dependx.models.DependencyInfo
import gradle.dependx.operations.FileToProjectCorrelator
import gradle.dependx.operations.GitChangesRetriever
import org.gradle.api.Project
import org.gradle.api.Plugin
import java.util.logging.Logger

class GradleDependxPlugin: Plugin<Project> {
  companion object {
    private val logger = Logger.getAnonymousLogger()
  }

  override fun apply(project: Project) {
    project.tasks.register("dependxies") { task ->
      task.doLast {
        applyDetection(project)
        applyAnalysis()
        applySkipping(project)
      }
    }
  }

  private fun applyDetection(project: Project) {
    val children = ProjectDiscoverer.discover(project)
    val resolver = BuildFileDependencyResolver(children)
    val toResolve = listOf(project.path, *(children.keys.toTypedArray()))
    val resolved = resolver.resolve(toResolve)
    val resolvedAsInfo = resolved.map {
      DependencyInfo(
          it.key,
          it.value,
          emptyList()
      )
    }
    DependxiesFileAuthor.write(resolvedAsInfo)
  }

  private fun applyAnalysis() {
    val dependantsEnhancedInfoList = DependantsEnhancedResolver.resolve()
    DependantsEnhancedFileAuthor.write(dependantsEnhancedInfoList)
  }

  private fun applySkipping(project: Project) {
    val filesChanged = GitChangesRetriever.retrievePaths(project)
    val projectsChanged = FileToProjectCorrelator.correlate(filesChanged, project)
    logger.info("PROJECTS CHANGED\n${projectsChanged.joinToString("\n") { it.path }}")

    val irrelevantProjectNames = IrrelevantProjectsConsultant.consult(projectsChanged.map { it.path })
    logger.info("IRRELEVANT PROJECTS\n${irrelevantProjectNames.joinToString("\n")}")
  }
}
